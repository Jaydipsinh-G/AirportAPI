// <auto-generated />
using AirportSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AirportSystem.Migrations
{
    [DbContext(typeof(AirportDbContext))]
    partial class AirportDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AirportSystem.Models.Airport", b =>
                {
                    b.Property<int>("AirportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AirportID"));

                    b.Property<int>("GeographyLevel1ID")
                        .HasColumnType("int");

                    b.Property<string>("IATACode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AirportID");

                    b.HasIndex("GeographyLevel1ID");

                    b.ToTable("Airport");

                    b.HasData(
                        new
                        {
                            AirportID = 1,
                            GeographyLevel1ID = 1,
                            IATACode = "LGW",
                            Type = "Departure and Arrival"
                        },
                        new
                        {
                            AirportID = 2,
                            GeographyLevel1ID = 2,
                            IATACode = "PMI",
                            Type = "Arrival Only"
                        },
                        new
                        {
                            AirportID = 3,
                            GeographyLevel1ID = 3,
                            IATACode = "LAX",
                            Type = "Arrival Only"
                        });
                });

            modelBuilder.Entity("AirportSystem.Models.AirportGroup", b =>
                {
                    b.Property<int>("AirportGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AirportGroupID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AirportGroupID");

                    b.ToTable("AirportGroup");

                    b.HasData(
                        new
                        {
                            AirportGroupID = 1,
                            Name = "Group A"
                        },
                        new
                        {
                            AirportGroupID = 2,
                            Name = "Group B"
                        });
                });

            modelBuilder.Entity("AirportSystem.Models.AirportGroupAirport", b =>
                {
                    b.Property<int>("AirportGroupID")
                        .HasColumnType("int");

                    b.Property<int>("AirportID")
                        .HasColumnType("int");

                    b.HasKey("AirportGroupID", "AirportID");

                    b.HasIndex("AirportID");

                    b.ToTable("AirportGroupAirport");

                    b.HasData(
                        new
                        {
                            AirportGroupID = 1,
                            AirportID = 1
                        },
                        new
                        {
                            AirportGroupID = 1,
                            AirportID = 2
                        },
                        new
                        {
                            AirportGroupID = 2,
                            AirportID = 3
                        });
                });

            modelBuilder.Entity("AirportSystem.Models.GeographyLevel1", b =>
                {
                    b.Property<int>("GeographyLevel1ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeographyLevel1ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GeographyLevel1ID");

                    b.ToTable("GeographyLevel1");

                    b.HasData(
                        new
                        {
                            GeographyLevel1ID = 1,
                            Name = "United Kingdom"
                        },
                        new
                        {
                            GeographyLevel1ID = 2,
                            Name = "Spain"
                        },
                        new
                        {
                            GeographyLevel1ID = 3,
                            Name = "United States"
                        },
                        new
                        {
                            GeographyLevel1ID = 4,
                            Name = "Turkey"
                        });
                });

            modelBuilder.Entity("AirportSystem.Models.Route", b =>
                {
                    b.Property<int>("RouteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteID"));

                    b.Property<int>("ArrivalAirportID")
                        .HasColumnType("int");

                    b.Property<int>("DepartureAirportID")
                        .HasColumnType("int");

                    b.HasKey("RouteID");

                    b.HasIndex("ArrivalAirportID");

                    b.HasIndex("DepartureAirportID");

                    b.ToTable("Route");

                    b.HasData(
                        new
                        {
                            RouteID = 1,
                            ArrivalAirportID = 2,
                            DepartureAirportID = 1
                        });
                });

            modelBuilder.Entity("AirportSystem.Models.Airport", b =>
                {
                    b.HasOne("AirportSystem.Models.GeographyLevel1", "GeographyLevel1")
                        .WithMany()
                        .HasForeignKey("GeographyLevel1ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeographyLevel1");
                });

            modelBuilder.Entity("AirportSystem.Models.AirportGroupAirport", b =>
                {
                    b.HasOne("AirportSystem.Models.AirportGroup", "AirportGroup")
                        .WithMany("AirportGroupAirports")
                        .HasForeignKey("AirportGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirportSystem.Models.Airport", "Airport")
                        .WithMany()
                        .HasForeignKey("AirportID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airport");

                    b.Navigation("AirportGroup");
                });

            modelBuilder.Entity("AirportSystem.Models.Route", b =>
                {
                    b.HasOne("AirportSystem.Models.Airport", "ArrivalAirport")
                        .WithMany()
                        .HasForeignKey("ArrivalAirportID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirportSystem.Models.Airport", "DepartureAirport")
                        .WithMany()
                        .HasForeignKey("DepartureAirportID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArrivalAirport");

                    b.Navigation("DepartureAirport");
                });

            modelBuilder.Entity("AirportSystem.Models.AirportGroup", b =>
                {
                    b.Navigation("AirportGroupAirports");
                });
#pragma warning restore 612, 618
        }
    }
}
